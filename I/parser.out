Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> term
Rule 2     term -> factor
Rule 3     factor -> NUMBER
Rule 4     factor -> CHARS
Rule 5     expression -> expression CONJUNCTION term
Rule 6     expression -> expression DISJUNCTION term
Rule 7     expression -> expression IMPLICATION term
Rule 8     expression -> expression DDNF term
Rule 9     expression -> expression DCNF term
Rule 10    factor -> NEGATION factor
Rule 11    factor -> DNEGATION CHARS
Rule 12    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

CHARS                : 4 11
CONJUNCTION          : 5
DCNF                 : 9
DDNF                 : 8
DISJUNCTION          : 6
DNEGATION            : 11
IMPLICATION          : 7
LPAREN               : 12
NEGATION             : 10
NUMBER               : 3
RPAREN               : 12
error                : 

Nonterminals, with rules where they appear

expression           : 5 6 7 8 9 12 0
factor               : 2 10
term                 : 1 5 6 7 8 9

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . term
    (5) expression -> . expression CONJUNCTION term
    (6) expression -> . expression DISJUNCTION term
    (7) expression -> . expression IMPLICATION term
    (8) expression -> . expression DDNF term
    (9) expression -> . expression DCNF term
    (2) term -> . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (10) factor -> . NEGATION factor
    (11) factor -> . DNEGATION CHARS
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    expression                     shift and go to state 1
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 1

    (0) S' -> expression .
    (5) expression -> expression . CONJUNCTION term
    (6) expression -> expression . DISJUNCTION term
    (7) expression -> expression . IMPLICATION term
    (8) expression -> expression . DDNF term
    (9) expression -> expression . DCNF term

    CONJUNCTION     shift and go to state 9
    DISJUNCTION     shift and go to state 10
    IMPLICATION     shift and go to state 11
    DDNF            shift and go to state 12
    DCNF            shift and go to state 13


state 2

    (1) expression -> term .

    CONJUNCTION     reduce using rule 1 (expression -> term .)
    DISJUNCTION     reduce using rule 1 (expression -> term .)
    IMPLICATION     reduce using rule 1 (expression -> term .)
    DDNF            reduce using rule 1 (expression -> term .)
    DCNF            reduce using rule 1 (expression -> term .)
    $end            reduce using rule 1 (expression -> term .)
    RPAREN          reduce using rule 1 (expression -> term .)


state 3

    (2) term -> factor .

    CONJUNCTION     reduce using rule 2 (term -> factor .)
    DISJUNCTION     reduce using rule 2 (term -> factor .)
    IMPLICATION     reduce using rule 2 (term -> factor .)
    DDNF            reduce using rule 2 (term -> factor .)
    DCNF            reduce using rule 2 (term -> factor .)
    $end            reduce using rule 2 (term -> factor .)
    RPAREN          reduce using rule 2 (term -> factor .)


state 4

    (3) factor -> NUMBER .

    CONJUNCTION     reduce using rule 3 (factor -> NUMBER .)
    DISJUNCTION     reduce using rule 3 (factor -> NUMBER .)
    IMPLICATION     reduce using rule 3 (factor -> NUMBER .)
    DDNF            reduce using rule 3 (factor -> NUMBER .)
    DCNF            reduce using rule 3 (factor -> NUMBER .)
    $end            reduce using rule 3 (factor -> NUMBER .)
    RPAREN          reduce using rule 3 (factor -> NUMBER .)


state 5

    (4) factor -> CHARS .

    CONJUNCTION     reduce using rule 4 (factor -> CHARS .)
    DISJUNCTION     reduce using rule 4 (factor -> CHARS .)
    IMPLICATION     reduce using rule 4 (factor -> CHARS .)
    DDNF            reduce using rule 4 (factor -> CHARS .)
    DCNF            reduce using rule 4 (factor -> CHARS .)
    $end            reduce using rule 4 (factor -> CHARS .)
    RPAREN          reduce using rule 4 (factor -> CHARS .)


state 6

    (10) factor -> NEGATION . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (10) factor -> . NEGATION factor
    (11) factor -> . DNEGATION CHARS
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    factor                         shift and go to state 14

state 7

    (11) factor -> DNEGATION . CHARS

    CHARS           shift and go to state 15


state 8

    (12) factor -> LPAREN . expression RPAREN
    (1) expression -> . term
    (5) expression -> . expression CONJUNCTION term
    (6) expression -> . expression DISJUNCTION term
    (7) expression -> . expression IMPLICATION term
    (8) expression -> . expression DDNF term
    (9) expression -> . expression DCNF term
    (2) term -> . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (10) factor -> . NEGATION factor
    (11) factor -> . DNEGATION CHARS
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    expression                     shift and go to state 16
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 9

    (5) expression -> expression CONJUNCTION . term
    (2) term -> . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (10) factor -> . NEGATION factor
    (11) factor -> . DNEGATION CHARS
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    term                           shift and go to state 17
    factor                         shift and go to state 3

state 10

    (6) expression -> expression DISJUNCTION . term
    (2) term -> . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (10) factor -> . NEGATION factor
    (11) factor -> . DNEGATION CHARS
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    term                           shift and go to state 18
    factor                         shift and go to state 3

state 11

    (7) expression -> expression IMPLICATION . term
    (2) term -> . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (10) factor -> . NEGATION factor
    (11) factor -> . DNEGATION CHARS
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    term                           shift and go to state 19
    factor                         shift and go to state 3

state 12

    (8) expression -> expression DDNF . term
    (2) term -> . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (10) factor -> . NEGATION factor
    (11) factor -> . DNEGATION CHARS
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    term                           shift and go to state 20
    factor                         shift and go to state 3

state 13

    (9) expression -> expression DCNF . term
    (2) term -> . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (10) factor -> . NEGATION factor
    (11) factor -> . DNEGATION CHARS
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    term                           shift and go to state 21
    factor                         shift and go to state 3

state 14

    (10) factor -> NEGATION factor .

    CONJUNCTION     reduce using rule 10 (factor -> NEGATION factor .)
    DISJUNCTION     reduce using rule 10 (factor -> NEGATION factor .)
    IMPLICATION     reduce using rule 10 (factor -> NEGATION factor .)
    DDNF            reduce using rule 10 (factor -> NEGATION factor .)
    DCNF            reduce using rule 10 (factor -> NEGATION factor .)
    $end            reduce using rule 10 (factor -> NEGATION factor .)
    RPAREN          reduce using rule 10 (factor -> NEGATION factor .)


state 15

    (11) factor -> DNEGATION CHARS .

    CONJUNCTION     reduce using rule 11 (factor -> DNEGATION CHARS .)
    DISJUNCTION     reduce using rule 11 (factor -> DNEGATION CHARS .)
    IMPLICATION     reduce using rule 11 (factor -> DNEGATION CHARS .)
    DDNF            reduce using rule 11 (factor -> DNEGATION CHARS .)
    DCNF            reduce using rule 11 (factor -> DNEGATION CHARS .)
    $end            reduce using rule 11 (factor -> DNEGATION CHARS .)
    RPAREN          reduce using rule 11 (factor -> DNEGATION CHARS .)


state 16

    (12) factor -> LPAREN expression . RPAREN
    (5) expression -> expression . CONJUNCTION term
    (6) expression -> expression . DISJUNCTION term
    (7) expression -> expression . IMPLICATION term
    (8) expression -> expression . DDNF term
    (9) expression -> expression . DCNF term

    RPAREN          shift and go to state 22
    CONJUNCTION     shift and go to state 9
    DISJUNCTION     shift and go to state 10
    IMPLICATION     shift and go to state 11
    DDNF            shift and go to state 12
    DCNF            shift and go to state 13


state 17

    (5) expression -> expression CONJUNCTION term .

    CONJUNCTION     reduce using rule 5 (expression -> expression CONJUNCTION term .)
    DISJUNCTION     reduce using rule 5 (expression -> expression CONJUNCTION term .)
    IMPLICATION     reduce using rule 5 (expression -> expression CONJUNCTION term .)
    DDNF            reduce using rule 5 (expression -> expression CONJUNCTION term .)
    DCNF            reduce using rule 5 (expression -> expression CONJUNCTION term .)
    $end            reduce using rule 5 (expression -> expression CONJUNCTION term .)
    RPAREN          reduce using rule 5 (expression -> expression CONJUNCTION term .)


state 18

    (6) expression -> expression DISJUNCTION term .

    CONJUNCTION     reduce using rule 6 (expression -> expression DISJUNCTION term .)
    DISJUNCTION     reduce using rule 6 (expression -> expression DISJUNCTION term .)
    IMPLICATION     reduce using rule 6 (expression -> expression DISJUNCTION term .)
    DDNF            reduce using rule 6 (expression -> expression DISJUNCTION term .)
    DCNF            reduce using rule 6 (expression -> expression DISJUNCTION term .)
    $end            reduce using rule 6 (expression -> expression DISJUNCTION term .)
    RPAREN          reduce using rule 6 (expression -> expression DISJUNCTION term .)


state 19

    (7) expression -> expression IMPLICATION term .

    CONJUNCTION     reduce using rule 7 (expression -> expression IMPLICATION term .)
    DISJUNCTION     reduce using rule 7 (expression -> expression IMPLICATION term .)
    IMPLICATION     reduce using rule 7 (expression -> expression IMPLICATION term .)
    DDNF            reduce using rule 7 (expression -> expression IMPLICATION term .)
    DCNF            reduce using rule 7 (expression -> expression IMPLICATION term .)
    $end            reduce using rule 7 (expression -> expression IMPLICATION term .)
    RPAREN          reduce using rule 7 (expression -> expression IMPLICATION term .)


state 20

    (8) expression -> expression DDNF term .

    CONJUNCTION     reduce using rule 8 (expression -> expression DDNF term .)
    DISJUNCTION     reduce using rule 8 (expression -> expression DDNF term .)
    IMPLICATION     reduce using rule 8 (expression -> expression DDNF term .)
    DDNF            reduce using rule 8 (expression -> expression DDNF term .)
    DCNF            reduce using rule 8 (expression -> expression DDNF term .)
    $end            reduce using rule 8 (expression -> expression DDNF term .)
    RPAREN          reduce using rule 8 (expression -> expression DDNF term .)


state 21

    (9) expression -> expression DCNF term .

    CONJUNCTION     reduce using rule 9 (expression -> expression DCNF term .)
    DISJUNCTION     reduce using rule 9 (expression -> expression DCNF term .)
    IMPLICATION     reduce using rule 9 (expression -> expression DCNF term .)
    DDNF            reduce using rule 9 (expression -> expression DCNF term .)
    DCNF            reduce using rule 9 (expression -> expression DCNF term .)
    $end            reduce using rule 9 (expression -> expression DCNF term .)
    RPAREN          reduce using rule 9 (expression -> expression DCNF term .)


state 22

    (12) factor -> LPAREN expression RPAREN .

    CONJUNCTION     reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    DISJUNCTION     reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    IMPLICATION     reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    DDNF            reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    DCNF            reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 12 (factor -> LPAREN expression RPAREN .)

