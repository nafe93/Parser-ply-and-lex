Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> term
Rule 2     term -> factor
Rule 3     factor -> NUMBER
Rule 4     factor -> CHARS
Rule 5     expression -> expression CONJUNCTION term
Rule 6     expression -> expression DISJUNCTION term
Rule 7     expression -> expression IMPLICATION term
Rule 8     factor -> NEGATION factor
Rule 9     factor -> DNEGATION CHARS
Rule 10    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

CHARS                : 4 9
CONJUNCTION          : 5
DISJUNCTION          : 6
DNEGATION            : 9
IMPLICATION          : 7
LPAREN               : 10
NEGATION             : 8
NUMBER               : 3
RPAREN               : 10
error                : 

Nonterminals, with rules where they appear

expression           : 5 6 7 10 0
factor               : 2 8
term                 : 1 5 6 7

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . term
    (5) expression -> . expression CONJUNCTION term
    (6) expression -> . expression DISJUNCTION term
    (7) expression -> . expression IMPLICATION term
    (2) term -> . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (8) factor -> . NEGATION factor
    (9) factor -> . DNEGATION CHARS
    (10) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    expression                     shift and go to state 1
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 1

    (0) S' -> expression .
    (5) expression -> expression . CONJUNCTION term
    (6) expression -> expression . DISJUNCTION term
    (7) expression -> expression . IMPLICATION term

    CONJUNCTION     shift and go to state 9
    DISJUNCTION     shift and go to state 10
    IMPLICATION     shift and go to state 11


state 2

    (1) expression -> term .

    CONJUNCTION     reduce using rule 1 (expression -> term .)
    DISJUNCTION     reduce using rule 1 (expression -> term .)
    IMPLICATION     reduce using rule 1 (expression -> term .)
    $end            reduce using rule 1 (expression -> term .)
    RPAREN          reduce using rule 1 (expression -> term .)


state 3

    (2) term -> factor .

    CONJUNCTION     reduce using rule 2 (term -> factor .)
    DISJUNCTION     reduce using rule 2 (term -> factor .)
    IMPLICATION     reduce using rule 2 (term -> factor .)
    $end            reduce using rule 2 (term -> factor .)
    RPAREN          reduce using rule 2 (term -> factor .)


state 4

    (3) factor -> NUMBER .

    CONJUNCTION     reduce using rule 3 (factor -> NUMBER .)
    DISJUNCTION     reduce using rule 3 (factor -> NUMBER .)
    IMPLICATION     reduce using rule 3 (factor -> NUMBER .)
    $end            reduce using rule 3 (factor -> NUMBER .)
    RPAREN          reduce using rule 3 (factor -> NUMBER .)


state 5

    (4) factor -> CHARS .

    CONJUNCTION     reduce using rule 4 (factor -> CHARS .)
    DISJUNCTION     reduce using rule 4 (factor -> CHARS .)
    IMPLICATION     reduce using rule 4 (factor -> CHARS .)
    $end            reduce using rule 4 (factor -> CHARS .)
    RPAREN          reduce using rule 4 (factor -> CHARS .)


state 6

    (8) factor -> NEGATION . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (8) factor -> . NEGATION factor
    (9) factor -> . DNEGATION CHARS
    (10) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    factor                         shift and go to state 12

state 7

    (9) factor -> DNEGATION . CHARS

    CHARS           shift and go to state 13


state 8

    (10) factor -> LPAREN . expression RPAREN
    (1) expression -> . term
    (5) expression -> . expression CONJUNCTION term
    (6) expression -> . expression DISJUNCTION term
    (7) expression -> . expression IMPLICATION term
    (2) term -> . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (8) factor -> . NEGATION factor
    (9) factor -> . DNEGATION CHARS
    (10) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    expression                     shift and go to state 14
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 9

    (5) expression -> expression CONJUNCTION . term
    (2) term -> . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (8) factor -> . NEGATION factor
    (9) factor -> . DNEGATION CHARS
    (10) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    term                           shift and go to state 15
    factor                         shift and go to state 3

state 10

    (6) expression -> expression DISJUNCTION . term
    (2) term -> . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (8) factor -> . NEGATION factor
    (9) factor -> . DNEGATION CHARS
    (10) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    term                           shift and go to state 16
    factor                         shift and go to state 3

state 11

    (7) expression -> expression IMPLICATION . term
    (2) term -> . factor
    (3) factor -> . NUMBER
    (4) factor -> . CHARS
    (8) factor -> . NEGATION factor
    (9) factor -> . DNEGATION CHARS
    (10) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 4
    CHARS           shift and go to state 5
    NEGATION        shift and go to state 6
    DNEGATION       shift and go to state 7
    LPAREN          shift and go to state 8

    term                           shift and go to state 17
    factor                         shift and go to state 3

state 12

    (8) factor -> NEGATION factor .

    CONJUNCTION     reduce using rule 8 (factor -> NEGATION factor .)
    DISJUNCTION     reduce using rule 8 (factor -> NEGATION factor .)
    IMPLICATION     reduce using rule 8 (factor -> NEGATION factor .)
    $end            reduce using rule 8 (factor -> NEGATION factor .)
    RPAREN          reduce using rule 8 (factor -> NEGATION factor .)


state 13

    (9) factor -> DNEGATION CHARS .

    CONJUNCTION     reduce using rule 9 (factor -> DNEGATION CHARS .)
    DISJUNCTION     reduce using rule 9 (factor -> DNEGATION CHARS .)
    IMPLICATION     reduce using rule 9 (factor -> DNEGATION CHARS .)
    $end            reduce using rule 9 (factor -> DNEGATION CHARS .)
    RPAREN          reduce using rule 9 (factor -> DNEGATION CHARS .)


state 14

    (10) factor -> LPAREN expression . RPAREN
    (5) expression -> expression . CONJUNCTION term
    (6) expression -> expression . DISJUNCTION term
    (7) expression -> expression . IMPLICATION term

    RPAREN          shift and go to state 18
    CONJUNCTION     shift and go to state 9
    DISJUNCTION     shift and go to state 10
    IMPLICATION     shift and go to state 11


state 15

    (5) expression -> expression CONJUNCTION term .

    CONJUNCTION     reduce using rule 5 (expression -> expression CONJUNCTION term .)
    DISJUNCTION     reduce using rule 5 (expression -> expression CONJUNCTION term .)
    IMPLICATION     reduce using rule 5 (expression -> expression CONJUNCTION term .)
    $end            reduce using rule 5 (expression -> expression CONJUNCTION term .)
    RPAREN          reduce using rule 5 (expression -> expression CONJUNCTION term .)


state 16

    (6) expression -> expression DISJUNCTION term .

    CONJUNCTION     reduce using rule 6 (expression -> expression DISJUNCTION term .)
    DISJUNCTION     reduce using rule 6 (expression -> expression DISJUNCTION term .)
    IMPLICATION     reduce using rule 6 (expression -> expression DISJUNCTION term .)
    $end            reduce using rule 6 (expression -> expression DISJUNCTION term .)
    RPAREN          reduce using rule 6 (expression -> expression DISJUNCTION term .)


state 17

    (7) expression -> expression IMPLICATION term .

    CONJUNCTION     reduce using rule 7 (expression -> expression IMPLICATION term .)
    DISJUNCTION     reduce using rule 7 (expression -> expression IMPLICATION term .)
    IMPLICATION     reduce using rule 7 (expression -> expression IMPLICATION term .)
    $end            reduce using rule 7 (expression -> expression IMPLICATION term .)
    RPAREN          reduce using rule 7 (expression -> expression IMPLICATION term .)


state 18

    (10) factor -> LPAREN expression RPAREN .

    CONJUNCTION     reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    DISJUNCTION     reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    IMPLICATION     reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 10 (factor -> LPAREN expression RPAREN .)

