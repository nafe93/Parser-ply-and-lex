
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHARS CONJUNCTION DCNF DDNF DISJUNCTION DNEGATION IMPLICATION LPAREN NEGATION NUMBER RPARENexpression : termterm : factorfactor : NUMBERfactor : CHARSexpression  : expression CONJUNCTION termexpression : expression DISJUNCTION termexpression : expression IMPLICATION termexpression : expression DDNF termexpression : expression DCNF termfactor : NEGATION factorfactor : DNEGATION CHARSfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'NUMBER':([0,6,8,9,10,11,12,13,],[4,4,4,4,4,4,4,4,]),'CHARS':([0,6,7,8,9,10,11,12,13,],[5,5,15,5,5,5,5,5,5,]),'NEGATION':([0,6,8,9,10,11,12,13,],[6,6,6,6,6,6,6,6,]),'DNEGATION':([0,6,8,9,10,11,12,13,],[7,7,7,7,7,7,7,7,]),'LPAREN':([0,6,8,9,10,11,12,13,],[8,8,8,8,8,8,8,8,]),'$end':([1,2,3,4,5,14,15,17,18,19,20,21,22,],[0,-1,-2,-3,-4,-10,-11,-5,-6,-7,-8,-9,-12,]),'CONJUNCTION':([1,2,3,4,5,14,15,16,17,18,19,20,21,22,],[9,-1,-2,-3,-4,-10,-11,9,-5,-6,-7,-8,-9,-12,]),'DISJUNCTION':([1,2,3,4,5,14,15,16,17,18,19,20,21,22,],[10,-1,-2,-3,-4,-10,-11,10,-5,-6,-7,-8,-9,-12,]),'IMPLICATION':([1,2,3,4,5,14,15,16,17,18,19,20,21,22,],[11,-1,-2,-3,-4,-10,-11,11,-5,-6,-7,-8,-9,-12,]),'DDNF':([1,2,3,4,5,14,15,16,17,18,19,20,21,22,],[12,-1,-2,-3,-4,-10,-11,12,-5,-6,-7,-8,-9,-12,]),'DCNF':([1,2,3,4,5,14,15,16,17,18,19,20,21,22,],[13,-1,-2,-3,-4,-10,-11,13,-5,-6,-7,-8,-9,-12,]),'RPAREN':([2,3,4,5,14,15,16,17,18,19,20,21,22,],[-1,-2,-3,-4,-10,-11,22,-5,-6,-7,-8,-9,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,8,],[1,16,]),'term':([0,8,9,10,11,12,13,],[2,2,17,18,19,20,21,]),'factor':([0,6,8,9,10,11,12,13,],[3,14,3,3,3,3,3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> term','expression',1,'p_expression_term','calcyacc.py',9),
  ('term -> factor','term',1,'p_term_factor','calcyacc.py',14),
  ('factor -> NUMBER','factor',1,'p_factor_num','calcyacc.py',19),
  ('factor -> CHARS','factor',1,'p_factor_chars','calcyacc.py',24),
  ('expression -> expression CONJUNCTION term','expression',3,'p_factor_conjuction','calcyacc.py',28),
  ('expression -> expression DISJUNCTION term','expression',3,'p_factor_disjunction','calcyacc.py',33),
  ('expression -> expression IMPLICATION term','expression',3,'p_factor_implication','calcyacc.py',38),
  ('expression -> expression DDNF term','expression',3,'p_factor_ddnf','calcyacc.py',42),
  ('expression -> expression DCNF term','expression',3,'p_factor_dcnf','calcyacc.py',47),
  ('factor -> NEGATION factor','factor',2,'p_factor_negation','calcyacc.py',51),
  ('factor -> DNEGATION CHARS','factor',2,'p_factor_dnegation','calcyacc.py',55),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','calcyacc.py',60),
]
